// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TutorialButton should initially render with a closed dialog 1`] = `
<glamorous.Div
  id="TutorialSlider"
  onClick={[Function]}
>
  <button>
    click me
  </button>
  <Dialog
    autoDetectWindowHeight={true}
    autoScrollBodyContent={false}
    bodyStyle={
      Object {
        "background": "transparent",
        "padding": 0,
      }
    }
    contentClassName="similarDialog"
    contentStyle={
      Object {
        "background": "transparent",
        "height": 1420,
        "maxWidth": "none",
        "width": "100%",
      }
    }
    modal={false}
    open={false}
    repositionOnUpdate={true}
  >
    <CloseButton
      backgroundColor="#333333"
      fill="#858585"
      handleClick={[Function]}
      right={0}
      top={-250}
    />
    <Slider
      arrows={false}
      centerMode={true}
      dots={false}
      infinite={false}
      initialSlide={0}
      variableWidth={true}
    >
      <div>
        <glamorous(div)>
          <glamorous(img)
            alt="tutorial 1"
            src="test-file-stub"
          />
        </glamorous(div)>
      </div>
      <div>
        <glamorous(div)>
          <glamorous(img)
            alt="tutorial 2"
            src="test-file-stub"
          />
        </glamorous(div)>
      </div>
      <div>
        <glamorous(div)>
          <glamorous(img)
            alt="tutorial 3"
            src="test-file-stub"
          />
        </glamorous(div)>
      </div>
      <div>
        <glamorous(div)>
          <glamorous(img)
            alt="tutorial 4"
            src="test-file-stub"
          />
        </glamorous(div)>
        <glamorous(div)
          id="BackButton"
        >
          <RaisedButton
            backgroundColor="#333333"
            disabled={false}
            fullWidth={true}
            icon={<NavigationArrowForward />}
            label="Torna alla navigazione"
            labelColor="white"
            labelPosition="before"
            onTouchTap={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "height": "100%",
              }
            }
          />
        </glamorous(div)>
      </div>
    </Slider>
  </Dialog>
</glamorous.Div>
`;

exports[`TutorialButton should open the dialog once clicked 1`] = `
<glamorous.Div
  id="TutorialSlider"
  onClick={[Function]}
>
  <button>
    click me
  </button>
  <Dialog
    autoDetectWindowHeight={true}
    autoScrollBodyContent={false}
    bodyStyle={
      Object {
        "background": "transparent",
        "padding": 0,
      }
    }
    contentClassName="similarDialog"
    contentStyle={
      Object {
        "background": "transparent",
        "height": 1420,
        "maxWidth": "none",
        "width": "100%",
      }
    }
    modal={false}
    open={true}
    repositionOnUpdate={true}
  >
    <CloseButton
      backgroundColor="#333333"
      fill="#858585"
      handleClick={[Function]}
      right={0}
      top={-250}
    />
    <Slider
      arrows={false}
      centerMode={true}
      dots={false}
      infinite={false}
      initialSlide={0}
      variableWidth={true}
    >
      <div>
        <glamorous(div)>
          <glamorous(img)
            alt="tutorial 1"
            src="test-file-stub"
          />
        </glamorous(div)>
      </div>
      <div>
        <glamorous(div)>
          <glamorous(img)
            alt="tutorial 2"
            src="test-file-stub"
          />
        </glamorous(div)>
      </div>
      <div>
        <glamorous(div)>
          <glamorous(img)
            alt="tutorial 3"
            src="test-file-stub"
          />
        </glamorous(div)>
      </div>
      <div>
        <glamorous(div)>
          <glamorous(img)
            alt="tutorial 4"
            src="test-file-stub"
          />
        </glamorous(div)>
        <glamorous(div)
          id="BackButton"
        >
          <RaisedButton
            backgroundColor="#333333"
            disabled={false}
            fullWidth={true}
            icon={<NavigationArrowForward />}
            label="Torna alla navigazione"
            labelColor="white"
            labelPosition="before"
            onTouchTap={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "height": "100%",
              }
            }
          />
        </glamorous(div)>
      </div>
    </Slider>
  </Dialog>
</glamorous.Div>
`;
